# {{ansible_managed}}

global
        log {{swift_syslog_ip}} local5
        tune.bufsize {{swift_haproxy_header_size}}
        tune.ssl.default-dh-param {{swift_haproxy_dh_size}}

        # timeout check
        # timeout client
        # timeout connect
        # timeout http-keep-alive
        # timeout http-request
        # timeout queue
        # timeout server
        # timeout tarpit
        # timeout tunnel


        chroot /var/lib/haproxy
        user haproxy
        group haproxy
        daemon
        
        stats socket /var/run/haproxy.sock mode 600 level admin user {{swift_oper_user}}
        stats timeout 2m


defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull

        timeout connect {{haproxy_timeout_connect}}
        timeout client {{haproxy_timeout_client}}
        timeout server {{haproxy_timeout_server}}

        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend http-in
         mode http
         option http-server-close
         bind *:80
         redirect scheme https code 301

frontend https-in
         option http-server-close
         redirect scheme https if !{ ssl_fc }
         bind *:443 ssl crt /etc/haproxy/haproxy.pem
         acl is_internal src {{swift_nets['management']}}
         acl is_swift_api url_beg /v1 /auth /open
         acl is_auth_api url_beg /login /profile
         acl is_nexe_request hdr_cnt(x-zerovm-execute) 1
         use_backend swift if is_nexe_request
         use_backend auth if is_auth_api or is_internal
         use_backend swift if is_swift_api
         use_backend other if !is_swift_api !is_auth_api

backend swift
{% for item in hostvars %}
{%     if item in groups['proxy'] %}
{%         set lookup_string = "host=" + item + " cidr=" + swift_nets['proxy'] %}
{%         set result = lookup('hostip', lookup_string) %}
    server {{item}} {{result}}:8080 check
{%     endif %}
{% endfor %}

backend auth
{% for item in hostvars %}
{%     if 'auth-proxy' in groups and item in groups['auth-proxy'] %}
{%         set lookup_string = "host=" + item + " cidr=" + swift_nets['proxy'] %}
{%         set result = lookup('hostip', lookup_string) %}
    server {{item}} {{result}}:8080 check
{%     endif %}
{% endfor %}

backend other
{% for item in hostvars %}
{%    if item in groups[swift_ui_role] %}
{%        set lookup_string = "host=" + item + " cidr=" + swift_nets['proxy'] %}
{%        set result = lookup('hostip', lookup_string) %}
    server {{item}} {{result}}:80 check
{%    endif %}
{% endfor %}


listen admin
       bind {{swift_haproxy_stats_ip}}:{{swift_haproxy_stats_port}}
       mode http
       stats enable
       stats hide-version
       stats realm HAproxy
       stats uri /
{% if swift_haproxy_stats_username is defined and swift_haproxy_stats_password is defined %}
       stats auth {{swift_haproxy_stats_username}}:{{swift_haproxy_stats_password}}
{% endif %}
