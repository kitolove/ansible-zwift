#
# {{ansible_managed}}
#

[DEFAULT]
backlog = 4096
bind_ip = 0.0.0.0
bind_port = 8080
log_statsd_default_sample_rate = 1.0
log_statsd_host = {{ swift_statsd_ip }}
log_statsd_metric_prefix = {{ ansible_hostname }}
log_statsd_port = 8125
log_statsd_sample_rate_factor = 1.0
workers = {{ ansible_processor_cores }}
# node_timeout = {{swift_proxy_node_timeout}}
# client_timeout = {{swift_proxy_client_timeout}}

[app:proxy-server]
use = egg:swift#proxy
account_autocreate = true
allow_account_management = {{swift_allow_account_management}}
conn_timeout = 3.5
error_suppression_interval = 60
error_suppression_limit = 10
log_facility = LOG_LOCAL0
object_post_as_copy = true
client_timeout = {{swift_proxy_client_timeout}}
node_timeout = {{swift_proxy_node_timeout}}

[filter:account-quotas]
use = egg:swift#account_quotas

[filter:authtoken]
admin_password = secrete
admin_tenant_name = service
admin_user = swift
auth_host = 192.168.122.38
auth_port = 5000
auth_protocol = http
cache = swift.cache
delay_auth_decision = 1
paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory
signing_dir = /var/cache/swift
token_cache_time = 86100

[filter:bulk]
use = egg:swift#bulk

[filter:cache]
memcache_serialization_support = 2
memcache_servers = {{swift_memcache_list}}
use = egg:swift#memcache

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:cname_lookup]
use = egg:swift#cname_lookup

[filter:container-quotas]
use = egg:swift#container_quotas

[filter:domain_remap]
use = egg:swift#domain_remap

[filter:formpost]
use = egg:swift#tempurl

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:keystoneauth]
operator_roles = admin, swiftoperator
reseller_admin_role = reseller_admin
use = egg:swift#keystoneauth

[filter:list-endpoints]
use = egg:swift#list_endpoints

[filter:name_check]
use = egg:swift#name_check

[filter:proxy-logging]
use = egg:swift#proxy_logging

[filter:ratelimit]
use = egg:swift#ratelimit

[filter:slo]
use = egg:swift#slo

[filter:staticweb]
use = egg:swift#staticweb

[filter:tempurl]
use = egg:swift#tempurl

[filter:tempauth]
use = egg:swift#tempauth
user_admin_admin = admin .admin .reseller_admin
user_test_tester = testing .admin
user_test2_tester2 = testing2 .admin
user_test_tester3 = testing3

[filter:liteauth-token]
use = egg:liteauth#liteauth_token
oauth_provider = google_oauth

[filter:litequota]
use = egg:liteauth#litequota
services_url = /v1/AUTH_.auth/services
whitelist_url = /v1/AUTH_.auth/whitelist

[filter:lite-swauth]
use = egg:liteauth#liteswauth
whitelist_url = /v1/AUTH_.auth/whitelist
invite_url = /v1/AUTH_.auth/invites
super_admin_key = {{swift_swauth_key}}
cors_allow_origin = http://{{swift_swauth_auth_domain}}, http://{{swift_swauth_cluster_domain}}
allow_passthrough = true

[filter:oauth-login-g]
use = egg:liteauth#oauthlogin
oauth_provider = google_oauth
google_client_id = {{google_auth_client_id}}
google_client_secret = {{google_auth_client_secret}}
google_scope = {{google_auth_scope}}
auth_endpoint = {{google_auth_endpoint}}
service_domain = {{google_auth_service_domain}}

[filter:oauth-login-fb]
use = egg:liteauth#oauthlogin
oauth_provider = facebook_oauth
facebook_client_id = {{fb_auth_client_id}}
facebook_client_secret = {{fb_auth_client_secret}}
facebook_scope = {{fb_auth_scope}}
auth_endpoint = {{fb_auth_endpoint}}
service_domain = {{fb_auth_service_domain}}

[filter:swauth]
use = egg:swauth#swauth
super_admin_key = {{swift_swauth_key}}
default_swift_cluster = {{swift_swauth_default_cluster}}

[filter:job-chain]
use = egg:zerocloud#job_chain
chain_timeout = {{swift_proxy_client_timeout}}

[filter:proxy-query]
use = egg:zerocloud#proxy_query

node_timeout = {{swift_proxy_node_timeout}}
client_timeout = {{swift_proxy_client_timeout}}

zerovm_maxinput = 5368709120
zerovm_maxoutput = 5368709120
zerovm_network_type = {{swift_zerovm_network_type}}
{% if zwift_daemons %}
zerovm_daemons = {% for item in zwift_daemons %}
 {{ item.id }} {{zwift_daemon_config_dir}}/{{ item.name }}.json
{%- endfor %}

{% endif %}
{% if zwift_sysimages %}
zerovm_sysimage_devices = {% for item in zwift_sysimages %}
 {{ item.name }} {{ zwift_sysimage_dir }}/{{ item.name }}.tar
{%- endfor %}

{% endif %}

[pipeline:main]
{% if swift_auth_type == 'tempauth' %}
pipeline = catch_errors proxy-logging healthcheck cache ratelimit tempauth proxy-logging job-chain proxy-query proxy-server
{% elif swift_auth_type == 'liteauth' %}
pipeline = catch_errors proxy-logging healthcheck cache ratelimit liteauth-token oauth-login-g lite-swauth swauth proxy-logging job-chain proxy-server
{% elif swift_auth_type == 'swauth' %}
pipeline = catch_errors proxy-logging healthcheck cache ratelimit liteauth-token swauth proxy-logging job-chain proxy-query proxy-server
{% endif %}
